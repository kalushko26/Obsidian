{
	"nodes":[
		{"type":"group","id":"1adffde9cda09d15","x":-1880,"y":-640,"width":3375,"height":4320,"color":"5","label":"NETWORK"},
		{"type":"group","id":"69c5cde3e463ac24","x":-1000,"y":-3880,"width":1400,"height":2320,"color":"1","label":"REST"},
		{"type":"group","id":"90dd672315319efd","x":-193,"y":3800,"width":1688,"height":1360,"color":"4","label":"Оптимизация веб-приложения"},
		{"type":"group","id":"7c434e6d9010039d","x":-1200,"y":4200,"width":940,"height":960,"color":"3","label":"Безопасность веб-приложения"},
		{"type":"text","text":"## HTTP-методы\n\nПеречислим самые распространенные HTTP-методы:\n\n**GET:** получение информации\n**POST:** создание новой/обновление старой информации\n**PUT:** сохраняет сущность\n**DELETE:** удаление ресурса","id":"4780fc9622b73af7","x":-1360,"y":1520,"width":420,"height":310,"color":"3"},
		{"type":"text","text":"# Что такое IP-адрес?\n\n#IP-адрес - это универсальный числовой идентификатор, который присваивается устройству, подключенному к сети интернет для его идентификации и обеспечения возможности обмена данными с другими устройствами сети.\n\nСуществует 2 версии IP-адресов: IPv4 и IPv6\nСуществует статический и динамический IP-адрес.","id":"613fa16e3562288d","x":-1360,"y":800,"width":420,"height":380,"color":"5"},
		{"type":"text","text":"## Когда используется UPD, а когда TCP/IP ?\n\nРазница между протоколами TCP и UDP – в так называемой \"гарантии доставки\". \n\nTCP требует отклика от клиента, которому доставлен пакет данных, подтверждения доставки, и для этого ему необходимо установленное заранее соединение. Также протокол TCP считается надежным, тогда как UDP получил даже именование “протокол ненадежных датаграмм. \n\nTCP исключает потери данных, дублирование и перемешивание пакетов, задержки. UDP все это допускает, и соединение для работы ему не требуется. \n\nПроцессы, которым данные передаются по UDP, должны обходиться полученным, даже и с потерями. TCP контролирует загруженность соединения, UDP не контролирует ничего, кроме целостности полученных датаграмм.","id":"265bae153f6a6e19","x":-140,"y":400,"width":420,"height":698,"color":"3"},
		{"type":"text","text":"## Что такое UPD\n\n**UDP** – транспортный протокол, передающий сообщения-датаграммы без необходимости установки соединения в IP-сети. ","id":"8d3fc53b98486c88","x":380,"y":400,"width":420,"height":200,"color":"5"},
		{"type":"text","text":"## Что такое Server ?\n\n#server - это хостер. Компания по оказанию услуг хостинга. На сервера хранятся данные. Он позволяет:\n1 управлять сеансом \n2 персонализация \n3 трекинг","id":"f16e5b2c436397b4","x":-140,"y":1570,"width":420,"height":260,"color":"5"},
		{"type":"text","text":"## Что такое TCP ?\n\n**TCP** – транспортный протокол передачи данных в сетях TCP/IP, предварительно устанавливающий соединение с сетью. ","id":"c450cc9c3c9eccb3","x":380,"y":649,"width":420,"height":200,"color":"5"},
		{"type":"text","text":"## Что такое URI ?\n\nЭто уникальный идентификатор, по которому можно найти информацию в сети интернет. \n**протокол:** https\n**домен:** example.com\n**путь:** /path/to/page\n**query:** ?key1=value&key\n**fragment:** # section\n**порт:** 8080\n**пользователь и пароль**","id":"4f73a8f23bec2b17","x":-140,"y":1130,"width":420,"height":370,"color":"5"},
		{"type":"text","text":"## Порядок установки соединения между клиентом и сервером\n\n1. Открывается TCP-соединение\n2. Отправляется HTTP - запрос\n3. Клиент читает HTTP -ответ от сервера\n4. Закрывается или переиспользуется соединение для дальнейших запросов","id":"64fe1641d6a1e4ad","x":-680,"y":1130,"width":420,"height":310,"color":"6"},
		{"type":"text","text":"# Что содержит HTTP-запрос?\n\n\n![[Pasted image 20230703190730.png|600]]","id":"8713d340fe2067c0","x":-680,"y":1520,"width":420,"height":310,"color":"6"},
		{"type":"text","text":"## Что такое WebSocket ?\n\nКлиент и сервер устанавливают соединение при помощи простого HTTP -заголовка. \nЕсли сервер поддерживает **WebSocket**, то он отправляет ответ с заголовком \"Upgrade\" и согласие на использование протокола WebSocket после этого.\n\n*WebSocket поддерживает соединение в режиме реального времени*. Его удобно использовать в онлайн-играх и системах мониторинга.\n\n","id":"a61eb61315078918","x":380,"y":905,"width":420,"height":410,"color":"5"},
		{"type":"text","text":"# DNS\n\nОсновное предназначение заключается в сопоставлении имени домена конкретному IP-адресу, на котором находится сайт.\n\n**www** - это *хост* , узел в сети, который идентифицируется по своему IP-адресу.\n\n**example.com** - это *домен*. Домен идентифицирует группу хостов в сети.","id":"6761905c6279ea17","x":-1360,"y":400,"width":420,"height":354,"color":"3"},
		{"type":"text","text":"## Версии протоколов HTTP\n\n#HTTP/1 : основное, что важно знать - это то, что количество передаваемых запросов на 1 домен 4-8\n\n#HTTP/2 : основные отличия:\n1. Сжатие\n2. Мультиплексирование \n3. Приоретизация \n4. Бинарный формат передачи данных\n5. Количество передаваемых запросов ограниченно правилами сервера","id":"eed3467b64730428","x":-140,"y":-80,"width":420,"height":400,"color":"3"},
		{"type":"text","text":"## Спецификация #OSI\nвключает в себя семислойную модель, которая описывает структуру сетевых технологий:\n1. физическая\n2. канальная\n3. сетевая\n4. транспортная\n5. сеансовая\n6. представляющая\n7. прикладная (на этом уровне работает #HTTP)","id":"fac7d5665478b493","x":-680,"y":-620,"width":420,"height":420,"color":"6"},
		{"type":"text","text":"## Передача данных в сети интернет \n\n#HTTP - это протокол передачи гипертекста, который используется для передачи данных в интернете.\n\nHTTP, по-умолчанию, не предполагает использование шифрования при передаче данных. Однако, #HTTPS использует технологии #SSL и #TLS .\n\nHTTP использует TCP-порт: 80\nHTTPS использует TCP-порт: 443","id":"bec972732486971a","x":-680,"y":-80,"width":420,"height":400,"color":"6"},
		{"type":"text","text":"## Порядок взаимодействия клиента с сервером\n\nПередача данных через протокол HTTP осуществляется посредством #TCP/IP соединения, используя HTTP -методы и URI\n\n**Трёхстороннее рукопожатие**\n1. Клиент отправляет запрос для установления соединения.\n2. Сервер отправляет подтверждение приёма запроса от клиента.\n3. Клиент отправляет подтверждение приёма.\n\nНа этапе *трехстороннего рукопожатия* согласуются такие параметры, как размер окна, максимальный размер пакета данных, контроль скорости передачи данных.","id":"699bae28b246b1f8","x":-680,"y":400,"width":420,"height":625,"color":"6"},
		{"type":"text","text":"## Как работает HTTP/2 ?\n\nПоток состоит из множества кадров, которые передаются между клиентом и сервером в рамках 1 TCP -соединения. \nТакже, мультиплексирование позволяет избежать проблемы *\"конкуренции сетей\"* , которая возникает в HTTP/1.1 , когда медийный запрос может заблокировать обработку всех остальных запросов в очереди.","id":"bec604acd8e91d96","x":380,"y":-60,"width":420,"height":360,"color":"3"},
		{"type":"text","text":"## Что такое cache ?\n\n#cache - это временное хранилище данных для ускорения доступа к сети интернет.\n\nИспользует сохр. поиск вебстрок, изображений и других ресурсов на локальном устройстве, чтобы они могли быть быстро загружены при последующих запросах.\nПроблемы: \n* неправильное отображение страницы\n* различные ошибки загрузку\n\nРешаются простой очисткой cache через браузер.\n\nРаньше cache использовался в качестве хранилища данных на стороне пользователя, но со временем эта роль отошла. Cache заменили более современные хранилища, такие как:\n**WebStorage API**: #sessionStorage , #localStorage и #IndexedDB \n","id":"36da9538f307fadb","x":-140,"y":1905,"width":420,"height":750,"color":"5"},
		{"type":"text","text":"## Что такое LocalStorage ?\n\n#LocalStorage - это постоянное хранилище доступное в течение неограниченного количества времени.\n\nДанные хранятся в виде ключ:значение. Объем хранилища: 5мб.\n\nДанные доступны во всех вкладках, которые соответствуют данному домену.\n","id":"b6a11e3b8c2e966c","x":380,"y":1905,"width":420,"height":350,"color":"5"},
		{"type":"text","text":"# Между HTTP-запросом и HTTP-ответом находится посредник\n\n#Proxy выполняют различные теневые операции, так называемые шлюзы или #cache \n\nВ роли Proxy могут выступать маршрутизаторы, модемы и т.д.\n\n","id":"9f688f5ca4d92e14","x":-680,"y":1905,"width":420,"height":415,"color":"6"},
		{"type":"text","text":"## Что такое SessionStorage ?\n\n#SessionStorage - это временное хранилище доступное только в течение сеанса браузера.\n\nДанные хранятся в виде ключ:значение. Объем хранилища: 5мб.\n\nДанные сохраняются пока пользователь не закроет окно браузера. Данные недоступны в других вкладках и окнах браузера.","id":"2f76986d620c4f1d","x":380,"y":2320,"width":420,"height":379,"color":"5"},
		{"type":"text","text":"## HTTP-статус коды\n\nПеречислим самые распространенные HTTP-статус коды:\n\n**1хх :** информационный\n**2хх :** успешное выполнение\n**3хх :** перенаправление\n**4хх :** ошибка клиента\n**5хх :** ошибка сервера","id":"ff2b5dae908ca979","x":-1360,"y":2730,"width":420,"height":340,"color":"3"},
		{"type":"text","text":"## Что такое IndexDB ?\n\n#IndexDB - это обьектная база данных, которая предназначена для хранения больших объемов структурированных данных в браузере. Они хранятся локально, поэтому, нет необходимости повторно обращаться к серверу.","id":"43868baea412e82a","x":380,"y":2730,"width":420,"height":260,"color":"5"},
		{"type":"text","text":"# WebSQL\n\n#WebSQL - устаревшая технология, которая позволяет клиенту хранить данные локально.\n\n* не кроссбраузерный;\n* имеет проблемы с безопасностью.","id":"47a04f4055c3f3c5","x":960,"y":2730,"width":420,"height":260,"color":"1"},
		{"type":"text","text":"# Что содержит HTTP-ответ?\n\n\n![](https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview/http_response.png)","id":"29578d422e22b53c","x":-680,"y":2730,"width":420,"height":340,"color":"6"},
		{"type":"text","text":"# А что еще возвращается вместе с HTTP-ответом?\n\nКогда клиент отправляет запрос на сервер , он может вместе с запросом вернуть #Cookie .\n\nCookie - это небольшой фрагмент данных (макс. 4кб), отправляемых сервером на браузер пользователя, который тот может сохранить и отослать обратно со следующим запросом.\n","id":"9c3911f121dc4511","x":-680,"y":3160,"width":420,"height":380,"color":"6"},
		{"type":"text","text":"## Какие виды Cookie бывают?\n\n#SecureCookie - это куки , которые отправляются через защищённое HTTPS  - соединение, что значительно уменьшает риски кражи пользовательских данных.\n\n#HTTPOnlyCookie - это куки, которые недоступны из JS через свойства Document.Cookie API , что помогает избежать межсайтингового скриптинга #XSS","id":"516940f97b7726f6","x":-140,"y":3160,"width":420,"height":380,"color":"3"},
		{"type":"text","text":"# Рендеринг страницы\n\nОдин из возможных вариантов ответа с сервера - структурирование веб-приложения.\n\n* DOM-конструирование\n* CSSOM-конструирование\n* Соединение DOM и CSSOM\n* Вычисление геометрии\n* Отрисовка","id":"24d291b7565214d6","x":-1880,"y":3840,"width":480,"height":440,"color":"2"},
		{"type":"text","text":"# PWA\n\nPWA - это веб-приложения, которые используют современные веб-технологии для создания приложений, которые выглядят и работают как нативные приложения, но запускаются и работают из браузера\n\n![[Pasted image 20230703195404.png|600]]","id":"900f1d9e3c167386","x":324,"y":3840,"width":420,"height":540,"color":"1"},
		{"type":"text","text":"## LazyLoading\n\n*Lazy Loading* - это техника оптимизации производительности веб-приложений, которая позволяет загружать контент только тогда, когда он нужен пользователю. \nВместо того, чтобы загружать все ресурсы на странице одновременно, используя Lazy Loading, мы загружаем только те ресурсы, которые пользователь запрашивает или которые находятся в зоне видимости.\n\n","id":"ad3a6b76e68a2a7e","x":980,"y":3840,"width":420,"height":400,"color":"4"},
		{"type":"text","text":"# XSS\n\n*Межсайтовый скриптинг XSS* - это атака на веб-приложение, в которой злоумышленник внедряет вредоносный код в веб-страницу , который будет выполняться в браузере жертвы.\n\nАтаки бывают:\n* хранимые (внедрение вредоносного кода в базу);\n* рефлектированные (внедрение вредоносного кода в запрос, который будет отображаться в ответе на запрос)","id":"80015c28b059809f","x":-700,"y":4220,"width":420,"height":444,"color":"1"},
		{"type":"text","text":"## CDN\n\n#CDN - это сеть серверов, расположенных в разных географических зонах, которые используются для ускорения доставки контента до конечного пользователя.\n\n","id":"7586b4a45904d7e7","x":980,"y":4280,"width":420,"height":257,"color":"4"},
		{"type":"text","text":"# ServiseWorkers\n\n#serviceWorker - это скрипты , которые запускаются в фоновом режиме и могут обрабатывать, и кешировать запросы пользователя без необходимости подключения к серверу.\n\nПреимущества:\n* оффлайн\n* кеширование запросов\n* фоновая работа\n* безопасность\n* гибкость","id":"506041f07a2a7c8d","x":-141,"y":4672,"width":420,"height":440,"color":"5"},
		{"type":"text","text":"# WebWorklet\n\n#webWorklet - это API ,которое позволяет создавать и запускать пользовательские скрипты в работающем веб-приложении не блокируя основной поток выполнения страницы.","id":"8eb81d3dc0a529b8","x":841,"y":4672,"width":420,"height":440,"color":"5"},
		{"type":"text","text":"# WebWorkers\n\n#webWorker - это скрипты , которые позволяют выполнять задачи в фоновом режиме не блокируя основной поток выполнения веб-страницы.","id":"74ec34269fdeef7c","x":324,"y":4672,"width":420,"height":440,"color":"5"},
		{"type":"text","text":"# CSP\n\n#CSP - это механизм безопасности, который позволяет контролировать и ограничивать ресурсы, которые могут быть запущены на веб-страницу.\n\nCSP уменьшает риски нарушения безопасности связанные с межасайтовым скриптингом XSS.\n\nПолитика Content Security Policy создаётся через HTTP-заголовок.","id":"b153affa8d9b0a9e","x":-700,"y":4700,"width":420,"height":440,"color":"1"},
		{"type":"text","text":"# CORS\n\n#CORS - это механизм безопасности , который позволяет веб-страницам запрашивать ресурсы с других доменов (или портов и протоколов) не нарушая при этом #CSP .\n\nCORS работает путём добавления HTTP-заголовков , которые указывают какие домены имеют разрешение на доступ к ресурсам.","id":"b431c20c0a50b6ad","x":-1180,"y":4700,"width":420,"height":440,"color":"1"},
		{"type":"text","text":"# Core Web Vitals\n\n#webWitals - это набор метрик оценки производительности.\n\n1. *LCP* - время загрузки наибольшего (объёмного) контента. (не менее 2.5 сек);\n2. *FID* - время реагирования на действие пользователя (например, клик). (не менее 100мс)\n3. *CIS* - метрика, которая оценивает стабильность контента страницы, менее 0.1","id":"3e5426f74cdfd88a","x":440,"y":5440,"width":420,"height":440},
		{"type":"text","text":"# Swagger API\n\n**Swagger** (также известный как OpenAPI) - это язык описания API, который позволяет разработчикам описывать структуру и функциональность RESTful API (можно использовать и GraphQL)\n\nSwagger позволяет автоматически генерировать документацию API и клиентские библиотеки на разных языках программирования. \n\nSwagger также может использоваться для тестирования и отладки API и для генерации кода серверной части.","id":"ee0e8898a262a7a4","x":-660,"y":-1400,"width":420,"height":465,"color":"4"},
		{"type":"text","text":"# Что такое API ?\n\n*API* (англ. Application Programming Interface) - это интерфейс программирования приложений, который определяет набор правил, протоколов и инструментов для взаимодействия между различными программами или компонентами программного обеспечения.\n\nЭто сервисы и библиотеки, к которым можно обратиться, используя HTTP-методы.\nЗапрос происходит по EndPoints.\n\nEndPoint = Base_URL + Resourse\n\nRequest = Method + EndPoint\n\n\n\n![[Pasted image 20230703185756.png|600]]","id":"500a56197da91ab9","x":-100,"y":-1400,"width":930,"height":520,"color":"5"},
		{"type":"text","text":"# Модель Ричардсона\nРазвитие #REST\n\n![[Pasted image 20230703185711.png|600]]\n\n0: HTTP-методы GET и POST\n1: URI, HTTP-методы GET, POST, PUT и DELETE\n2: Дизайн. HTTP => JSON или XML\n3: Гипермедиа","id":"a55b4922d22004bd","x":-660,"y":-2140,"width":420,"height":520,"color":"2"},
		{"type":"text","text":"# GraphQL\n\n#GraphQL - язык запросов и среда выполнения запросов для создания API веб-приложений.\n\nКлючевое отличие от приложений, основанных на REST-архитектуре в том, что GraphQL позволяет клиентам определять структуру и формат данных.","id":"3b1044b0d8ddaca2","x":590,"y":-1960,"width":420,"height":400,"color":"1"},
		{"type":"text","text":"# Restful и HTTP-методы\n\nREST использует HTTP-методы определения #CRUD операций HTTP-запросов.\n\n**GET:** получение информации\n**POST:** создание новой/обновление старой информации\n**PUT:** сохраняет сущность\n**DELETE:** удаление ресурса\n\nGET, PUT и DELETE - *идемпотентны*.","id":"5d3297c64a91471d","x":-660,"y":-2660,"width":420,"height":400,"color":"2"},
		{"type":"text","text":"## Что такое идемпотентность?\n\nСущность термина #идемпотентность - создание большого количества идентичных запросов имеет такой же эффект , как и один запрос.","id":"c5d9613151af443c","x":-120,"y":-2660,"width":420,"height":240,"color":"5"},
		{"type":"text","text":"## RESTful и его критерии\n\nREST и #RESTful - это два разных понятия.\nЕсли REST - это архитектурный стиль, то RESTful - это сервис, который следует этому стилю.\n\nКритерии RESTful:\n1. Client/Server\n2. Stateless\n3. Lajered system\n4. Cache\n5. Uniform interface\n6. Code-on-demand\n\n","id":"8ec4bd12aaa93bd1","x":-660,"y":-3240,"width":420,"height":460,"color":"2"},
		{"type":"text","text":"## REST\n\n#Rest - это модель для построения распределённых систем . \n\nОн использует протокол HTTP для передачи данных между клиентом и сервером.\n\n![[Pasted image 20230703185935.png|600]]","id":"f1986457546888f6","x":-660,"y":-3820,"width":420,"height":480,"color":"2"}
	],
	"edges":[
		{"id":"6dabc967e66ec0c4","fromNode":"fac7d5665478b493","fromSide":"bottom","toNode":"bec972732486971a","toSide":"top"},
		{"id":"a0977ea88706afca","fromNode":"bec972732486971a","fromSide":"bottom","toNode":"699bae28b246b1f8","toSide":"top"},
		{"id":"04fd1149a3ed2339","fromNode":"699bae28b246b1f8","fromSide":"right","toNode":"f16e5b2c436397b4","toSide":"left","toEnd":"none"},
		{"id":"9783bc5f6337c3e2","fromNode":"699bae28b246b1f8","fromSide":"right","toNode":"265bae153f6a6e19","toSide":"left"},
		{"id":"037e452103295404","fromNode":"265bae153f6a6e19","fromSide":"right","toNode":"8d3fc53b98486c88","toSide":"left","toEnd":"none"},
		{"id":"21062e3a29b2efbc","fromNode":"265bae153f6a6e19","fromSide":"right","toNode":"c450cc9c3c9eccb3","toSide":"left","toEnd":"none"},
		{"id":"f69dd362edb7cc54","fromNode":"699bae28b246b1f8","fromSide":"right","toNode":"4f73a8f23bec2b17","toSide":"left","toEnd":"none"},
		{"id":"0e19de6cde52656a","fromNode":"699bae28b246b1f8","fromSide":"bottom","toNode":"64fe1641d6a1e4ad","toSide":"top"},
		{"id":"a557553c3e42d68f","fromNode":"bec972732486971a","fromSide":"right","toNode":"eed3467b64730428","toSide":"left"},
		{"id":"eb01028207c2c518","fromNode":"eed3467b64730428","fromSide":"right","toNode":"bec604acd8e91d96","toSide":"left"},
		{"id":"73b01b3b76546570","fromNode":"64fe1641d6a1e4ad","fromSide":"bottom","toNode":"8713d340fe2067c0","toSide":"top"},
		{"id":"68614880c923d214","fromNode":"8713d340fe2067c0","fromSide":"bottom","toNode":"9f688f5ca4d92e14","toSide":"top"},
		{"id":"f49d795af61ea00a","fromNode":"9f688f5ca4d92e14","fromSide":"bottom","toNode":"29578d422e22b53c","toSide":"top"},
		{"id":"f97ca75265e083c7","fromNode":"9f688f5ca4d92e14","fromSide":"right","toNode":"36da9538f307fadb","toSide":"left","toEnd":"none"},
		{"id":"2d7b8eefa09cd931","fromNode":"29578d422e22b53c","fromSide":"bottom","toNode":"9c3911f121dc4511","toSide":"top"},
		{"id":"78e905ef63f88602","fromNode":"9c3911f121dc4511","fromSide":"right","toNode":"516940f97b7726f6","toSide":"left"},
		{"id":"1db998bb2b35222d","fromNode":"699bae28b246b1f8","fromSide":"left","toNode":"613fa16e3562288d","toSide":"right","toEnd":"none","label":"определен\nпри входе\nв сеть"},
		{"id":"5a50b66c881d7155","fromNode":"6761905c6279ea17","fromSide":"bottom","toNode":"613fa16e3562288d","toSide":"top","toEnd":"none"},
		{"id":"f46aaf90557f993b","fromNode":"6761905c6279ea17","fromSide":"right","toNode":"699bae28b246b1f8","toSide":"left","fromEnd":"arrow"},
		{"id":"07529fe10e8c2082","fromNode":"b6a11e3b8c2e966c","fromSide":"bottom","toNode":"2f76986d620c4f1d","toSide":"top","toEnd":"none"},
		{"id":"8c061cdff3f00dce","fromNode":"2f76986d620c4f1d","fromSide":"bottom","toNode":"43868baea412e82a","toSide":"top","toEnd":"none"},
		{"id":"254e7c58a58adefd","fromNode":"f1986457546888f6","fromSide":"bottom","toNode":"8ec4bd12aaa93bd1","toSide":"top"},
		{"id":"c6f30b09671ed4b1","fromNode":"8ec4bd12aaa93bd1","fromSide":"bottom","toNode":"5d3297c64a91471d","toSide":"top"},
		{"id":"307268acd0729016","fromNode":"5d3297c64a91471d","fromSide":"right","toNode":"c5d9613151af443c","toSide":"left"},
		{"id":"e77b42500cdd49ce","fromNode":"5d3297c64a91471d","fromSide":"bottom","toNode":"a55b4922d22004bd","toSide":"top"},
		{"id":"ab7bf218ac50ae50","fromNode":"a55b4922d22004bd","fromSide":"left","toNode":"f1986457546888f6","toSide":"left","fromEnd":"arrow"},
		{"id":"f8385ed38e4a5b73","fromNode":"69c5cde3e463ac24","fromSide":"right","toNode":"3b1044b0d8ddaca2","toSide":"top","color":"1","label":"технология-аналог"},
		{"id":"5ae17b62f0776dcb","fromNode":"43868baea412e82a","fromSide":"right","toNode":"47a04f4055c3f3c5","toSide":"left","toEnd":"none","label":"аналог"},
		{"id":"570188ec51ad2bb9","fromNode":"3b1044b0d8ddaca2","fromSide":"bottom","toNode":"ee0e8898a262a7a4","toSide":"top"},
		{"id":"c7f5ef52edaf38be","fromNode":"69c5cde3e463ac24","fromSide":"bottom","toNode":"ee0e8898a262a7a4","toSide":"top"},
		{"id":"19e6e22ca5b2b7c0","fromNode":"ee0e8898a262a7a4","fromSide":"right","toNode":"500a56197da91ab9","toSide":"left","toEnd":"none"},
		{"id":"af33cf291aafe300","fromNode":"ee0e8898a262a7a4","fromSide":"bottom","toNode":"1adffde9cda09d15","toSide":"top"},
		{"id":"98c00a074da3cd43","fromNode":"36da9538f307fadb","fromSide":"right","toNode":"b6a11e3b8c2e966c","toSide":"left","toEnd":"none"},
		{"id":"d12bcec8f9dd3947","fromNode":"36da9538f307fadb","fromSide":"right","toNode":"2f76986d620c4f1d","toSide":"left","toEnd":"none"},
		{"id":"87dcfec03b0a36db","fromNode":"36da9538f307fadb","fromSide":"right","toNode":"43868baea412e82a","toSide":"left","toEnd":"none"},
		{"id":"767db9d604f6ac2c","fromNode":"43868baea412e82a","fromSide":"bottom","toNode":"516940f97b7726f6","toSide":"right","toEnd":"none"},
		{"id":"9b7ed7d715208ba6","fromNode":"265bae153f6a6e19","fromSide":"right","toNode":"a61eb61315078918","toSide":"left","toEnd":"none"},
		{"id":"53407cf88da7ded5","fromNode":"8713d340fe2067c0","fromSide":"left","toNode":"4780fc9622b73af7","toSide":"right"},
		{"id":"4147d49392b74db9","fromNode":"29578d422e22b53c","fromSide":"left","toNode":"ff2b5dae908ca979","toSide":"right"},
		{"id":"4501420def33fa15","fromNode":"1adffde9cda09d15","fromSide":"bottom","toNode":"24d291b7565214d6","toSide":"top","label":"Ответ с сервера: результат"},
		{"id":"949d1b604295971b","fromNode":"900f1d9e3c167386","fromSide":"bottom","toNode":"506041f07a2a7c8d","toSide":"top"},
		{"id":"08ea44031ad12302","fromNode":"900f1d9e3c167386","fromSide":"bottom","toNode":"74ec34269fdeef7c","toSide":"top"},
		{"id":"8ea07708330ebe14","fromNode":"900f1d9e3c167386","fromSide":"bottom","toNode":"8eb81d3dc0a529b8","toSide":"top"},
		{"id":"18bafea86020c893","fromNode":"1adffde9cda09d15","fromSide":"bottom","toNode":"90dd672315319efd","toSide":"top"},
		{"id":"69df085c3dfaaec0","fromNode":"90dd672315319efd","fromSide":"bottom","toNode":"3e5426f74cdfd88a","toSide":"top","label":"Метрики оценки производительности"},
		{"id":"6b0d756e279acf82","fromNode":"1adffde9cda09d15","fromSide":"bottom","toNode":"7c434e6d9010039d","toSide":"top"}
	]
}